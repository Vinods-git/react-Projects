{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  "Print to console": {
  	"scope": "javascript,typescript",
  	"prefix": "log",
  	"body": [
  		"console.log('$1');",
  		"$2"
  	],
  	"description": "Log output to console"
  },
  "react": {
  	"scope": "javascript,typescript",
  	"prefix": "ir",
  	"body": [
  		"import React from 'react;",
  	],
  	"description": "Log output to console"
  },
  "class snippet": {
  	"scope": "javascript,typescript",
  	"prefix": "clss",
  	"body": [
  		"import React from 'react'",

"class $1 extends React.Component{",
"constructor(props){",
 "super(props);",
"this.state={}",

"}",
"render(){",

   " return <>Regular Component {this.props.name}</>",
"}",

"}",

"export default $1;",

  	],
  	"description": "class snippet"
  },
	"function snippet": {
  	"scope": "javascript,typescript",
  	"prefix": "func",
  	"body": [
  		"import React from 'react'",

"const $1 = (props) =>{",

   " return <></>",
"}",

"export default $1 ;"

  	],
  	"description": "class snippet"
  }
}